version: '3.8'

services:
  # WildTracker API
  wildtracker-api:
    build: ./wildtracker-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC_TELEMETRY=wildlife-telemetry
      - CORS_ORIGIN=http://localhost:3001
    depends_on:
      - kafka
      - zookeeper
    networks:
      - wildtracker-network

  # WildTracker Web Application
  wildtracker-web:
    build: ./wildtracker-web
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    depends_on:
      - wildtracker-api
    networks:
      - wildtracker-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - wildtracker-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - wildtracker-network

  # Kafka UI (Optional)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - wildtracker-network

networks:
  wildtracker-network:
    driver: bridge 